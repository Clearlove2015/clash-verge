name: Release CI

on:
  workflow_dispatch:
  push:
    tags:
      - v**
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
            option: portable
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    # if: startsWith(github.repository, 'MetaCubeX')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install Dependencies (ubuntu only)
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf openssl

      - name: Yarn install and check (aarch64-apple-darwin only)
        if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        env:
          npm_config_arch: arm64
        run: |
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn run check

      - name: Yarn install and check (Non aarch64-apple-darwin target)
        if: ${{ matrix.target != 'aarch64-apple-darwin' }}
        run: |
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn run check

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        if: matrix.option != 'portable'
        # enable cache even though failed
        # continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: "Clash Verge v__VERSION__"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true
          args: -f default-meta --target ${{ matrix.target }}

      - name: Portable Bundle
        if: matrix.option == 'portable'
        run: |
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn build -f default-meta
          yarn run portable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1

  release-update:
    needs: [release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "yarn"

      - name: Yarn install
        run: yarn install --network-timeout 1000000 --frozen-lockfile

      - name: Release updater file
        run: yarn run updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
